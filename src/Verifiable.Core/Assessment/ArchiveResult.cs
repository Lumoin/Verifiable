using System;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Verifiable.Assessment
{
    /// <summary>
    /// Delegate to archive an <see cref="AssessmentResult"/>.
    /// </summary>
    /// <param name="assesmentToArchive">The assessment result to archive.</param>
    /// <param name="archiverId">Identifier for the archiver.</param>
    /// <param name="traceId">Tracing identifier for the archival operation.</param>
    /// <param name="spanId">Span identifier for the archival operation.</param>
    /// <param name="baggage">Additional context for the archival operation.</param>
    /// <returns>The archiving result.</returns>
    public delegate ValueTask<ArchivingResult> ArchiveDelegateAsync(
        AssessmentResult assesmentToArchive,
        string archiverId,
        string? traceId,
        string? spanId,
        IReadOnlyDictionary<string, string>? baggage);


    /// <summary>
    /// The context in which assessment results are archived.
    /// It may hold information such as archival rules, destination storage, 
    /// and other relevant data ensuring the proper archiving of claims and assessments.
    /// </summary>
    public class ArchiveContext
    {
    }


    /// <summary>
    /// Represents the result of an archiving operation.
    /// </summary>
    /// <param name="IsSuccess">Indicates if the archiving was successful.</param>
    /// <param name="ArchivingId">Identifier for this particular archiving result.</param>
    /// <param name="ArchiveId">Unique identifier for the archive, generated by the archiver.</param>
    /// <param name="CorrelationId">User-supplied identifier to correlate the archive operation with other operations.</param>
    /// <param name="ArchiverVersion">Version information of the archiver.</param>
    /// <param name="CreationTimestampInUtc">UTC timestamp indicating when the archiving operation was completed.</param>
    /// <remarks>
    /// <para>
    /// The ArchiveResult record captures important metadata about the archiving operation. This includes a unique ArchiveId, 
    /// which should be generated by the archiving process to uniquely identify the archived data.
    /// </para>
    /// <para>
    /// A user-supplied CorrelationId can also be included to correlate the archive operation with other operations, logs, or transactions.
    /// </para>
    /// </remarks>
    public record ArchivingResult(
        bool IsSuccess,
        string ArchivingId,
        string ArchiveId,
        string CorrelationId,
        string ArchiverVersion,
        DateTime CreationTimestampInUtc,
        ArchiveContext ArchivingContext,
        string? TraceId,
        string? SpanId,
        IReadOnlyDictionary<string, string>? Baggage);
}
